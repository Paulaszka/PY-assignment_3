services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      FLASK_APP: app.py
      FLASK_RUN_HOST: 0.0.0.0
      DATABASE_URL: postgres://postgres:password@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:5000"
    command: >
      sh -c "if [ ! -f ./.migrated ]; then
              flask db init &&
              touch ./.migrated;
            fi &&
            flask db migrate -m 'initial' &&
            flask db upgrade &&
            flask run"


  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: